{"version":3,"sources":["components/Login.tsx","components/Message.tsx","components/ChatWindow.tsx","App.tsx","index.tsx"],"names":["Login","name","setName","room","setRoom","onJoin","className","type","value","onChange","e","target","placeholder","required","onClick","Message","message","username","cn","author","time","ChatWindow","socket","useState","currentMessage","setCurrentMessage","messageList","setMessageList","useEffect","on","messageData","console","log","prev","sendMessage","a","Date","now","toLocaleTimeString","emit","map","onKeyPress","key","io","App","setUsername","error","setError","showChat","setShowChat","close","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cfb003e.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/Login.scss';\n\ntype Props = {\n  name: string,\n  setName: (input: string) => void,\n  room: string,\n  setRoom: (input: string) => void,\n  onJoin: () => void\n};\n\nexport const Login: React.FC<Props> = ({\n  name,\n  setName,\n  room,\n  setRoom,\n  onJoin,\n}) => {\n  return (\n    <div className=\"login\">\n      <input\n        type=\"text\"\n        className=\"login__input\"\n        value={name}\n        onChange={e => setName(e.target.value)}\n        placeholder=\"Input your username\"\n        required\n      />\n\n      <input\n        type=\"text\"\n        className=\"login__input\"\n        value={room}\n        onChange={e => setRoom(e.target.value)}\n        placeholder=\"Input room id\"\n        required\n      />\n\n      <button\n        type=\"button\"\n        className=\"login__button\"\n        onClick={onJoin}\n      >\n        Join a room\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport '../styles/Message.scss';\nimport cn from 'classnames';\nimport { MessageData } from '../types/MessageData';\n\ntype Props = {\n  message: MessageData,\n  username: string\n};\n\nexport const Message: React.FC<Props> = ({ message, username }) => {\n  return (\n    <div className={cn('message', message.author === username ? 'message--my' : 'message--other')}>\n      <div className=\"message__text\">{message.message}</div>\n      <div className=\"message__meta\">\n        <p>{`${message.author} ${message.time}`}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport '../styles/ChatWindow.scss';\nimport { Socket } from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { MessageData } from '../types/MessageData';\nimport { Message } from './Message';\n\ntype Props = {\n  socket: Socket,\n  room: string,\n  username: string,\n};\n\nexport const ChatWindow: React.FC<Props> = ({ socket, room, username }) => {\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [messageList, setMessageList] = useState<MessageData[]>([]);\n\n  useEffect(() => {\n    socket.on('receive_message', (messageData) => {\n      // eslint-disable-next-line no-console\n      console.log(messageData);\n\n      setMessageList(prev => [...prev, messageData]);\n    });\n  }, [socket]);\n\n  const sendMessage = async () => {\n    if (currentMessage) {\n      const messageData: MessageData = {\n        message: currentMessage,\n        author: username,\n        time: new Date(Date.now()).toLocaleTimeString(),\n        room,\n      };\n\n      await socket.emit('send_message', messageData);\n      setMessageList(prev => [...prev, messageData]);\n      // setCurrentMessage('');\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__header\">\n        <p className=\"chat__header-text\">{`Chat room #${room}`}</p>\n      </div>\n      <ScrollToBottom className=\"chat__body\">\n        {messageList.map((message) => (\n          <Message message={message} username={username} key={message.message} />\n        ))}\n      </ScrollToBottom>\n      <div className=\"chat__footer\">\n        <input\n          type=\"text\"\n          className=\"message__input\"\n          value={currentMessage}\n          onChange={e => setCurrentMessage(e.target.value)}\n          placeholder=\"Type here...\"\n          onKeyPress={e => handleKeyPress(e)}\n        />\n        <button\n          type=\"button\"\n          className=\"message__send-button\"\n          onClick={sendMessage}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { io } from 'socket.io-client';\nimport { Login } from './components/Login';\nimport { ChatWindow } from './components/ChatWindow';\n\nconst socket = io('https://simplechat1.herokuapp.com');\n\nexport const App: React.FC = () => {\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  const [error, setError] = useState(false);\n  const [showChat, setShowChat] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      socket.close();\n    };\n  }, []);\n\n  const joinRoom = () => {\n    if (!username || !room) {\n      setError(true);\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n\n      return;\n    }\n\n    socket.emit('join_room', room);\n    setShowChat(true);\n  };\n\n  return (\n    <div className=\"starter\">\n      {!showChat ? (\n        <Login\n          name={username}\n          setName={setUsername}\n          room={room}\n          setRoom={setRoom}\n          onJoin={joinRoom}\n        />\n      ) : (\n        <ChatWindow\n          room={room}\n          username={username}\n          socket={socket}\n        />\n      )}\n\n      {error && (\n        <h1>Error</h1>\n      )}\n\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}